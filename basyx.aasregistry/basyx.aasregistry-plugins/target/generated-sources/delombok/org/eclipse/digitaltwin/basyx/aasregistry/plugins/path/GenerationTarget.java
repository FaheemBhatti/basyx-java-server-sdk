// Generated by delombok at Mon Jul 28 11:50:04 CEST 2025
package org.eclipse.digitaltwin.basyx.aasregistry.plugins.path;

/**
 * ****************************************************************************
 * Copyright (C) 2023 DFKI GmbH (https://www.dfki.de/en/web)
 * 
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 * 
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 * 
 * SPDX-License-Identifier: MIT
 * ****************************************************************************
 */
public class GenerationTarget {
	private String packageName;
	private String className;

	@java.lang.SuppressWarnings("all")
	@lombok.Generated
	public String getPackageName() {
		return this.packageName;
	}

	@java.lang.SuppressWarnings("all")
	@lombok.Generated
	public String getClassName() {
		return this.className;
	}

	@java.lang.SuppressWarnings("all")
	@lombok.Generated
	public void setPackageName(final String packageName) {
		this.packageName = packageName;
	}

	@java.lang.SuppressWarnings("all")
	@lombok.Generated
	public void setClassName(final String className) {
		this.className = className;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@lombok.Generated
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof GenerationTarget)) return false;
		final GenerationTarget other = (GenerationTarget) o;
		if (!other.canEqual((java.lang.Object) this)) return false;
		final java.lang.Object this$packageName = this.getPackageName();
		final java.lang.Object other$packageName = other.getPackageName();
		if (this$packageName == null ? other$packageName != null : !this$packageName.equals(other$packageName)) return false;
		final java.lang.Object this$className = this.getClassName();
		final java.lang.Object other$className = other.getClassName();
		if (this$className == null ? other$className != null : !this$className.equals(other$className)) return false;
		return true;
	}

	@java.lang.SuppressWarnings("all")
	@lombok.Generated
	protected boolean canEqual(final java.lang.Object other) {
		return other instanceof GenerationTarget;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@lombok.Generated
	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		final java.lang.Object $packageName = this.getPackageName();
		result = result * PRIME + ($packageName == null ? 43 : $packageName.hashCode());
		final java.lang.Object $className = this.getClassName();
		result = result * PRIME + ($className == null ? 43 : $className.hashCode());
		return result;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	@lombok.Generated
	public java.lang.String toString() {
		return "GenerationTarget(packageName=" + this.getPackageName() + ", className=" + this.getClassName() + ")";
	}

	@java.lang.SuppressWarnings("all")
	@lombok.Generated
	public GenerationTarget(final String packageName, final String className) {
		this.packageName = packageName;
		this.className = className;
	}
}
